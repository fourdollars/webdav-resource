#!/bin/bash

set -euo pipefail

exec 3>&1
exec 1>&2
payload="$(cat <&0)"

skip=$(jq -r .params.skip <<< "$payload")

domain=$(jq -r .source.domain <<< "$payload")
echo "machine $domain" > ~/.netrc
if [ "$(jq -r '.source | has("username")' <<< "$payload")" = 'true' ]; then
    username=$(jq -r .source.username <<< "$payload")
    echo "  login $username" >> ~/.netrc
fi
if [ "$(jq -r '.source | has("password")' <<< "$payload")" = 'true' ]; then
    password=$(jq -r .source.password <<< "$payload")
    echo "  password $password" >> ~/.netrc
fi
if [ "$(jq -r '.source | has("ssl")' <<< "$payload")" = 'true' ]; then
    ssl=$(jq -r .source.ssl <<< "$payload")
    if [ "$ssl" = "false" ]; then
        url="http://$domain"
    else
        url="https://$domain"
    fi
else
    url="https://$domain"
fi
if [ "$(jq -r '.source | has("port")' <<< "$payload")" = 'true' ]; then
    port=$(jq -r .source.port <<< "$payload")
    url+=":$port"
fi
if [ "$(jq -r '.source | has("path")' <<< "$payload")" = 'true' ]; then
    path=$(jq -r .source.path <<< "$payload")
    url+="/$path/"
else
    url+="/"
fi
if [ "$(jq -r '.params | has("path")' <<< "$payload")" = 'true' ]; then
    path=$(jq -r .params.path <<< "$payload")
    url+="$path/"
fi

trim() {
    local var="$*"
    # remove leading whitespace characters
    var="${var#"${var%%[![:space:]]*}"}"
    # remove trailing whitespace characters
    var="${var%"${var##*[![:space:]]}"}"
    printf '%s' "$var"
}

lines=()
folders=()
while read -r line; do
    if [ -n "$line" ]; then
        lines+=("$(trim "$line")")
    fi
done < <(echo ls | cadaver "$url" | head -n -2)

IFS=$'\n'
echo "${lines[*]:2}" | sort
sha256=$(echo "${lines[*]:2}" | sort | sha256sum | awk '{print $1}')

if [ "$(jq -r '.params | has("files")' <<< "$payload")" = 'true' ]; then
    mapfile -t files_to_get < <(jq -r '.params.files|.[]' <<< "$payload" | sort)
else
    files_to_get=()
fi

folders=()
files=()
for line in "${lines[@]:2}"; do
    if [ "$(echo "$line" | awk '{print $1}')" = "Coll:" ]; then
        folders+=("$(echo "$line" | awk '{print $2}')")
    else
        files+=("$(echo "$line" | awk '{print $1}')")
    fi
done

cd "$1"
if [ "${#files[@]}" -eq 0 ] && [ "${#files_to_get[@]}" -eq 0 ] || [ "$skip" == "true" ]; then
    size=""
else
    IFS=$' '
    if [ "${#files_to_get[@]}" -gt 0 ]; then
        dir=()
        base=()
        for item in "${files_to_get[@]}"; do
            dir+=("$(dirname "$item")")
            base+=("$(basename "$item")")
        done
        same=1
        for idx in "${!dir[@]}"; do
            if [ "${dir[0]}" != "${dir[$idx]}" ]; then
                same=0
                break
            fi
        done
        if [ "$same" = 1 ]; then
            if [ "${dir[0]}" = '.' ]; then
                echo "mget ${base[*]}" | cadaver "$url" | head -n -2
            else
                echo "mget ${base[*]}" | cadaver "$url${dir[0]}/" | head -n -2
            fi
        else
            for idx in "${!dir[@]}"; do
                if [ "${dir[$idx]}" = '.' ]; then
                    echo "get ${base[$idx]}" | cadaver "$url" | head -n -2
                else
                    echo "get ${base[$idx]}" | cadaver "$url${dir[$idx]}/" | head -n -2
                fi
            done
        fi
    else
        echo "mget ${files[*]}" | cadaver "$url" | head -n -2
    fi
    size=$(du -shc . | awk '{print $1}' | tail -n 1)
fi

IFS=$'\n'
json='{"version":{"digest":"'"sha256:$sha256"'","url":"'"$url"'"},"metadata":[{"name":"folder","value":"'"${folders[*]}"'"},{"name":"file","value":"'"${files[*]}"'"},{"name":"size","value":"'"$size"'"}]}'

jq -n "$json" >&3
