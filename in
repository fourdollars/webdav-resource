#!/bin/bash

set -euo pipefail

exec 3>&1
exec 1>&2
jq -M -S . < /dev/stdin > /tmp/input.json

skip=$(jq -r .params.skip < /tmp/input.json)

domain=$(jq -r .source.domain < /tmp/input.json)
echo "machine $domain" > ~/.netrc
if [ "$(jq -r '.source | has("username")' < /tmp/input.json)" = 'true' ]; then
    username=$(jq -r .source.username < /tmp/input.json)
    echo "  login $username" >> ~/.netrc
fi
if [ "$(jq -r '.source | has("password")' < /tmp/input.json)" = 'true' ]; then
    password=$(jq -r .source.password < /tmp/input.json)
    echo "  password $password" >> ~/.netrc
fi
if [ "$(jq -r '.source | has("ssl")' < /tmp/input.json)" = 'true' ]; then
    ssl=$(jq -r .source.ssl < /tmp/input.json)
    if [ "$ssl" = "false" ]; then
        url="http://$domain"
    else
        url="https://$domain"
    fi
else
    url="https://$domain"
fi
if [ "$(jq -r '.source | has("port")' < /tmp/input.json)" = 'true' ]; then
    port=$(jq -r .source.port < /tmp/input.json)
    url+=":$port"
fi
if [ "$(jq -r '.source | has("path")' < /tmp/input.json)" = 'true' ]; then
    path=$(jq -r .source.path < /tmp/input.json)
    url+="/$path/"
else
    url+="/"
fi
if [ "$(jq -r '.params | has("path")' < /tmp/input.json)" = 'true' ]; then
    path=$(jq -r .params.path < /tmp/input.json)
    url+="$path/"
fi

trim() {
    local var="$*"
    # remove leading whitespace characters
    var="${var#"${var%%[![:space:]]*}"}"
    # remove trailing whitespace characters
    var="${var%"${var##*[![:space:]]}"}"
    printf '%s' "$var"
}

lines=()
folders=()
while read -r line; do
    if [ -n "$line" ]; then
        lines+=("$(trim "$line")")
    fi
done < <(echo ls | cadaver "$url" | head -n -2)

IFS=$'\n'
echo "${lines[*]:2}" | sort
sha256=$(echo "${lines[*]:2}" | sort | sha256sum | awk '{print $1}')

if [ "$(jq -r '.params | has("files")' < /tmp/input.json)" = 'true' ]; then
    mapfile -t files_to_get < <(jq -r '.params.files|.[]' < /tmp/input.json | sort)
else
    files_to_get=()
fi

folders=()
files=()
for line in "${lines[@]:2}"; do
    if [ "$(echo "$line" | awk '{print $1}')" = "Coll:" ]; then
        folders+=("$(echo "$line" | awk '{print $2}')")
    else
        files+=("$(echo "$line" | awk '{print $1}')")
    fi
done

cd "$1"
if [ "${#files[@]}" -gt 0 ] && [ "$skip" != "true" ]; then
    IFS=$' '
    if [ "${#files_to_get[@]}" -gt 0 ]; then
        not_exist=
        for name in "${files_to_get[@]}"; do
            if ! [[ "${files[*]}" =~ $name ]]; then
                echo "\`$name' doesn't exist on $url."
                not_exist=1
            fi
        done
        if [ -n "$not_exist" ]; then
            exit 1
        fi
        echo "mget ${files_to_get[*]}" | cadaver "$url" | head -n -2
    else
        echo "mget ${files[*]}" | cadaver "$url" | head -n -2
    fi
    size=$(du -shc . | awk '{print $1}' | tail -n 1)
else
    size=""
fi

IFS=$'\n'
json='{"version":{"sha256":"'"$sha256"'","url":"'"$url"'"},"metadata":[{"name":"folder","value":"'"${folders[*]}"'"},{"name":"file","value":"'"${files[*]}"'"},{"name":"size","value":"'"$size"'"}]}'

jq -n "$json" >&3
